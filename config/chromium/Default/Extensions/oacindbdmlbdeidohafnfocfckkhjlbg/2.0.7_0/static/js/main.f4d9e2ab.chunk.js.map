{"version":3,"sources":["core/types.js","core/constants.js","util/util.js","components/Header/HeaderComponent.js","lib/mp/mp.js","components/Player/PlayerComponent.js","components/Settings/SettingsComponent.js","components/TabPanel/TabPanel.js","components/Settings/Hotkeys/HotkeysComponent.js","components/Footer/FooterComponent.js","App.js","serviceWorker.js","store/store.js","index.js","assets/flags/ind.svg","assets/flags/gbr.svg","assets/flags/usa.svg","assets/flags/deu.svg","assets/flags/esp.svg","assets/flags/fra.svg","assets/flags/ita.svg","assets/flags/jpn.svg","assets/flags/kor.svg","assets/flags/nld.svg","assets/flags/pol.svg","assets/flags/bra.svg","assets/flags/rus.svg","assets/flags/chn.svg","assets/flags/hkg.svg","assets/flags/twn.svg","assets/flags/rou.svg"],"names":["APP","UPDATE","PLAYER","STATUS","IS_STOPPED","IS_LOADING","IS_READY","IS_PLAYING","IS_PAUSED","IS_ERROR","ACTION","LOADING","ERROR","TAB_ID","SET_VOICES","EPIC","PREV","NEXT","PLAY","STOP","HALT","PAUSE","RESUME","SETTINGS","OTHER_UPDATE","HOTKEY_FOCUS","SET_HOTKEYS","PARSER","SET_SECTIONS","GET_SECTIONS","core","chrome","browser","HeaderComponent","Component","state","readingTime","updateReadingTime","sections","rate","length","timeReadingWords","map","section","text","split","reduce","acc","val","timeDelayingSentences","Math","ceil","calcReadingTime","this","props","slice","currentSection","setState","componentWillReceiveProps","nextProps","nextContext","componentDidMount","render","classes","infoText","infoTextIcon","ScheduleRounded","infoTextBox","Typography","className","component","messages","readTime","status","CircularProgress","size","loading","InfoSharp","start","SentimentVeryDissatisfiedRounded","failed","includes","Grid","container","spacing","align","alignItems","alignContent","justify","root","item","xs","infoIconBoxStyle","infoTextBoxStyle","IconButton","onClick","onShowSettingsChanged","showSettings","color","SettingsSharp","connect","player","settings","dispatch","toggle","type","withStyles","theme","height","fontSize","fontWeight","display","justifyContent","mpToContent","async","message","params","console","log","Promise","resolve","reject","tabs","query","currentWindow","active","activeTab","id","sentData","sendMessage","data","tabId","response","error","PlayerComponent","parseState","playState","pauseState","t","playRef","React","createRef","stopRef","nextRef","prevRef","hotkeyEvents","play","ReactTestUtils","Simulate","click","current","stop","next","prev","registerKeyUpListener","document","addEventListener","e","clearTimeout","setTimeout","hotkeyFocus","hotkeys","which","key","code","push","onUpdateHotkeyAndResetFocus","find","Object","keys","disableHotkeys","playOrParse","parse","onPlay","onPause","onLoading","timeout","st","race","onError","onSetPlayingTabId","isDisabledPlay","isDisabledOther","playIcon","PlayArrowSharp","largeIcon","PauseSharp","playButton","flatButton","bigBtn","disabled","ref","fbutton","activeButton","style","borderLeft","onStop","StopSharp","button","smallBtn","onPrev","SkipPreviousSharp","onNext","SkipNextSharp","onSetSections","value","border","borderBottom","padding","borderRadius","width","backgroundColor","palette","primary","main","flags","GB","US","DE","ES","FR","IN","ID","IT","JP","KR","NL","PL","BR","RU","CN","HK","TW","RO","SettingsComponent","settingsChanged","onSettingChanged","otherSettingsChanged","onOtherSettingsChanged","voiceChanged","event","countriesFlags","voice","voices","Box","mt","mb","Autocomplete","options","getOptionLabel","option","shortTitle","groupBy","groupName","onChange","defaultValue","renderOption","countryCode","src","alt","flagImg","flagOptionImg","FlagSharp","renderInput","InputProps","startAdornment","InputAdornment","position","TextField","label","variant","fullWidth","gutterBottom","Slider","volume","aria-labelledby","valueLabelDisplay","step","scale","x","marks","min","max","pitch","FormGroup","row","FormControlLabel","control","Switch","checked","autoscroll","inputProps","updatedState","marginRight","TabPanel","children","index","other","role","hidden","p","propTypes","PropTypes","node","any","isRequired","HotkeysComponent","onPlayChanged","target","onKeyFocus","onHotkeyFocus","getKeyCombo","playKey","trim","toLocaleUpperCase","join","playDefault","stopDefault","nextDefault","prevDefault","noValidate","autoComplete","readOnly","onFocus","onBlur","hotkey","FooterComponent","a11yProps","AppBar","Tabs","aria-label","Tab","createMuiTheme","light","dark","secondary","tertiary","action","url","runtime","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","store","Store","ready","then","ReactDOM","getElementById","navigator","serviceWorker","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f4d9e2ab.chunk.js","sourcesContent":["export const APP = {\n  ACTION: {\n    UPDATE: \"APP::UPDATE\"\n  }\n};\nexport const PLAYER = {\n  STATUS: {\n    IS_STOPPED: 0,\n    IS_LOADING: 1,\n    IS_READY: 2,\n    IS_PLAYING: 3,\n    IS_PAUSED: 4,\n    IS_ERROR: 5\n  },\n  ACTION: {\n    LOADING: \"PLAYER::LOADING\",\n    ERROR: \"PLAYER::ERROR\",\n    UPDATE: \"PLAYER::UPDATE\",\n    TAB_ID: \"PLAYER::TAB_ID\",\n    SET_VOICES: \"PLAYER::SET_VOICES\"\n  },\n  EPIC: {\n    PREV: \"PLAYER::PREV\",\n    NEXT: \"PLAYER::NEXT\",\n    PLAY: \"PLAYER::PLAY\",\n    STOP: \"PLAYER::STOP\",\n    HALT: \"PLAYER::HALT\",\n    PAUSE: \"PLAYER::PAUSE\",\n    RESUME: \"PLAYER::RESUME\"\n  }\n};\n\nexport const CONTENT = {\n  ACTION: {\n    SKIP_ANIMATE: \"CONTENT::SKIP_ANIMATE\"\n  }\n};\n\nexport const SETTINGS = {\n  ACTION: {\n    UPDATE: \"SETTINGS::UPDATE\",\n    OTHER_UPDATE: \"SETTINGS::OTHER_UPDATE\",\n    HOTKEY_FOCUS: \"SETTINGS::HOTKEY_FOCUS\",\n    SET_HOTKEYS: \"SETTINGS::SET_HOTKEYS\"\n  }\n};\n\nexport const PARSER = {\n  ACTION: {\n    SET_SECTIONS: \"PARSER::SET_SECTIONS\",\n    GET_SECTIONS: \"PARSER::GET_SECTIONS\"\n  }\n};\n","export const INTERVAL_WORD = 0.28;\nexport const INTERVAL_SPEAKING_SERVICE_DELAY = 0.4;\n\nexport const GA_TRACKING_ID = \"UA-25965793-6\";\nexport const GA_CLIENT_ID = \"\";\n","import {\n  INTERVAL_WORD,\n  INTERVAL_SPEAKING_SERVICE_DELAY,\n  GA_TRACKING_ID,\n  GA_CLIENT_ID\n} from \"../core/constants\";\n\n/*eslint-disable */\nconst core = chrome || browser;\n/*eslint-enable */\n\nexport const calcReadingTime = (sections, rate) => {\n  if (sections && sections.length) {\n    const words = sections\n      .map(section =>\n        section && section.text ? (section.text || \"\").split(\" \").length : 0\n      )\n      .reduce((acc, val) => acc + val);\n\n    const timeReadingWords = (words * INTERVAL_WORD) / rate;\n    const timeDelayingSentences =\n      INTERVAL_SPEAKING_SERVICE_DELAY * sections.length;\n    return Math.ceil((timeReadingWords + timeDelayingSentences) / 60);\n  } else {\n    return 0;\n  }\n};\n\nexport const tracker = (type, data, action, url) => {\n  core.runtime.sendMessage({\n    type: type,\n    data: data,\n    action: action,\n    url: url\n  });\n};\n\nexport const reportGA = params => {\n  // Firefox 1.0+\n  const isFirefox = typeof InstallTrigger !== \"undefined\";\n  if (isFirefox) return false;\n  try {\n    const request = new XMLHttpRequest();\n    let message = \"\";\n    if (!params)\n      message =\n        \"v=1&tid=\" +\n        GA_TRACKING_ID +\n        \"&cid= \" +\n        GA_CLIENT_ID +\n        \"&aip=1&dp=%2Fpopup\" +\n        \"&ds=add-on&t=pageview\";\n    else\n      message =\n        \"v=1&tid=\" +\n        GA_TRACKING_ID +\n        \"&cid= \" +\n        GA_CLIENT_ID +\n        \"&aip=1\" +\n        \"&ds=add-on&t=event&ec=\" +\n        params.category +\n        \"&ea=\" +\n        params.action +\n        \"&el=\" +\n        params.label;\n\n    request.open(\"POST\", \"https://www.google-analytics.com/collect\", true);\n    request.send(message);\n  } catch (e) {\n    console.log(\"Error sending report to Google Analytics.\\n\" + e);\n  }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Grid,\n  Typography,\n  CircularProgress,\n  IconButton,\n  withStyles\n} from \"@material-ui/core\";\nimport { PLAYER, APP } from \"../../core/types\";\nimport {\n  SentimentVeryDissatisfiedRounded,\n  ScheduleRounded,\n  SettingsSharp,\n  InfoSharp\n} from \"@material-ui/icons\";\nimport messages from \"../../lib/UI/UI.messages.json\";\nimport { calcReadingTime } from \"../../util/util\";\n\nconst styles = theme => ({\n  root: {\n    height: 35\n  },\n  text: {\n    fontSize: 13,\n    fontWeight: \"bold\"\n  },\n  infoIconBoxStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#545454\"\n  },\n  infoTextBoxStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"#545454\"\n  }\n});\n\nclass HeaderComponent extends Component {\n  state = {\n    readingTime: 0\n  };\n\n  updateReadingTime = () => {\n    let readingTime = calcReadingTime(\n      this.props.sections.slice(this.props.currentSection),\n      this.props.rate\n    );\n\n    if (readingTime) this.setState({ readingTime: readingTime });\n  };\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    this.updateReadingTime();\n  }\n\n  componentDidMount() {\n    this.updateReadingTime();\n  }\n\n  render() {\n    const { classes } = this.props;\n    let infoTextIcon = <ScheduleRounded />;\n    let infoText;\n    let infoTextBox = (\n      <Typography className={classes.text} component=\"span\">\n        {this.state.readingTime === 0\n          ? `calculating reading time..`\n          : `~${this.state.readingTime}m ${messages.readTime.text}`}\n      </Typography>\n    );\n\n    if (this.props.status === PLAYER.STATUS.IS_LOADING) {\n      infoTextIcon = <CircularProgress size={20} />;\n      infoText = messages.loading.text;\n    } else if (this.props.status === PLAYER.STATUS.IS_STOPPED) {\n      infoTextIcon = <InfoSharp />;\n      infoText = messages.start.text;\n    } else if (this.props.status === PLAYER.STATUS.IS_ERROR) {\n      infoTextIcon = <SentimentVeryDissatisfiedRounded />;\n      infoText = messages.failed.text;\n    }\n\n    if (\n      [\n        PLAYER.STATUS.IS_LOADING,\n        PLAYER.STATUS.IS_STOPPED,\n        PLAYER.STATUS.IS_ERROR\n      ].includes(this.props.status)\n    ) {\n      infoTextBox = (\n        <Typography className={classes.text} component=\"span\">\n          {infoText}\n        </Typography>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        spacing={0}\n        align=\"center\"\n        alignItems=\"center\"\n        alignContent=\"center\"\n        justify=\"center\"\n        className={classes.root}\n      >\n        <Grid item xs={10}>\n          <Grid\n            container\n            alignItems=\"center\"\n            alignContent=\"center\"\n            className={classes.root}\n          >\n            <Grid\n              item\n              xs={2}\n              align=\"center\"\n              className={classes.infoIconBoxStyle}\n            >\n              {infoTextIcon}\n            </Grid>\n            <Grid\n              item\n              xs={10}\n              align=\"left\"\n              className={classes.infoTextBoxStyle}\n            >\n              {infoTextBox}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={2}>\n          <IconButton\n            onClick={() => {\n              this.props.onShowSettingsChanged(!this.props.showSettings);\n            }}\n            size=\"small\"\n            color=\"primary\"\n          >\n            <SettingsSharp />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    sections: state.player.sections,\n    currentSection: state.player.currentSection,\n    status: state.player.status,\n    showSettings: state.showSettings,\n    rate: state.player.settings.rate\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onShowSettingsChanged: toggle =>\n      dispatch({ type: APP.ACTION.UPDATE, showSettings: toggle })\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(HeaderComponent));\n","/*eslint-disable */\nconst core = chrome || browser;\n/*eslint-enable */\n\nexport const mpToContent = async (message, params) => {\n  console.log(\"Pericles.mp.mpToContent(message, params)\", message, params);\n  return new Promise(async (resolve, reject) => {\n    await core.tabs.query(\n      {\n        currentWindow: true,\n        active: true\n      },\n      async tabs => {\n        const activeTab = tabs[0];\n        if (activeTab && activeTab.id) {\n          const sentData = {};\n          sentData.message = message;\n          if (typeof params !== \"undefined\") sentData.params = params;\n          console.log(\n            \"Pericles.mp.mpToContent(activeTab, sentData)\",\n            activeTab,\n            sentData\n          );\n          core.tabs.sendMessage(activeTab.id, sentData, async data => {\n            console.log(\"Pericles.mp.mpToContent.response(data)\", data);\n            resolve({ tabId: activeTab.id, response: data || true });\n          });\n        } else {\n          reject({ error: \"no active tab\", response: false });\n        }\n      }\n    );\n  });\n};\n\nexport const getContentTabId = async () => {\n  console.log(\"Pericles.mp.getContentTabId\");\n  return new Promise(async (resolve, reject) => {\n    core.tabs.query(\n      {\n        currentWindow: true,\n        active: true\n      },\n      async tabs => {\n        const activeTab = tabs[0];\n        resolve(activeTab.id);\n      }\n    );\n  });\n};\n\nexport const mpToBackground = async (message, params) => {\n  console.log(\"Pericles.mp.mpToBackground(message, params)\", message, params);\n  return new Promise((resolve, reject) => {\n    const sentData = {};\n    sentData.message = message;\n    if (typeof params !== \"undefined\") sentData.params = params;\n\n    core.runtime.sendMessage(sentData, response => {\n      console.log(\"Pericles.mp.mpToBackground.sendMessage.response\", response);\n      resolve(response);\n    });\n  });\n};\n\nexport const mpToPopup = async (message, params) => {\n  console.log(\"Pericles.mp.mpToPopup(message, params)\", message, params);\n  return new Promise((resolve, reject) => {\n    const sentData = {};\n    sentData.message = message;\n    if (typeof params !== \"undefined\") sentData.params = params;\n\n    core.runtime.sendMessage(sentData, response => {\n      console.log(\"Pericles.mp.mpToPopup.sendMessage.response\", response);\n      resolve(response);\n    });\n  });\n};\n","import React, { Component } from \"react\";\nimport ReactTestUtils from \"react-dom/test-utils\";\n\nimport { Grid, IconButton, withStyles } from \"@material-ui/core\";\nimport {\n  PlayArrowSharp,\n  StopSharp,\n  SkipPreviousSharp,\n  SkipNextSharp,\n  PauseSharp\n} from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\nimport { mpToContent } from \"../../lib/mp/mp\";\nimport { PLAYER, PARSER, SETTINGS } from \"../../core/types\";\n\nconst styles = theme => ({\n  fbutton: {\n    border: \"1px solid #dfdfdf\",\n    borderBottom: \"none\"\n  },\n  bigBtn: {\n    padding: 16\n  },\n  smallBtn: {\n    padding: 6\n  },\n  button: {\n    border: \"1px solid #dfdfdf\"\n  },\n  flatButton: {\n    borderRadius: 0,\n    width: \"100%\"\n  },\n  activeButton: {\n    backgroundColor: theme.palette.primary.main\n  },\n  largeIcon: {\n    height: 30,\n    width: 30\n  }\n});\n\nclass PlayerComponent extends Component {\n  parseState = [PLAYER.STATUS.IS_STOPPED, PLAYER.STATUS.IS_ERROR];\n  playState = [PLAYER.STATUS.IS_READY, PLAYER.STATUS.IS_PAUSED];\n  pauseState = [PLAYER.STATUS.IS_PLAYING];\n  t = 0;\n  playRef = React.createRef();\n  stopRef = React.createRef();\n  nextRef = React.createRef();\n  prevRef = React.createRef();\n\n  componentDidMount() {\n    this.registerKeyUpListener();\n  }\n\n  hotkeyEvents = {\n    play: () => {\n      ReactTestUtils.Simulate.click(this.playRef.current);\n    },\n    stop: () => {\n      ReactTestUtils.Simulate.click(this.stopRef.current);\n    },\n    next: () => {\n      ReactTestUtils.Simulate.click(this.nextRef.current);\n    },\n    prev: () => {\n      ReactTestUtils.Simulate.click(this.prevRef.current);\n    }\n  };\n\n  registerKeyUpListener = () => {\n    document.addEventListener(\"keyup\", e => {\n      clearTimeout(this.t);\n      this.t = setTimeout(() => {\n        console.log(\"onKeyUp\", e);\n        if (this.props.hotkeyFocus) {\n          const hotkeys = [];\n          const { which, key, code } = e;\n          hotkeys.push({ which, key, code });\n          this.props.onUpdateHotkeyAndResetFocus(\n            this.props.hotkeyFocus,\n            hotkeys\n          );\n        } else {\n          const find = Object.keys(this.props.hotkeys).find(key => {\n            console.log(this.props.hotkeys[key], key, e);\n            return this.props.hotkeys[key][0].which === e.which;\n          });\n          if (!this.props.disableHotkeys && find && this.hotkeyEvents[find])\n            this.hotkeyEvents[find]();\n        }\n      }, 150);\n    });\n  };\n\n  playOrParse = async () => {\n    if (this.parseState.includes(this.props.status)) this.parse();\n    else if (this.playState.includes(this.props.status)) this.props.onPlay();\n    else if (this.pauseState.includes(this.props.status)) this.props.onPause();\n  };\n\n  parse = async () => {\n    this.props.onLoading();\n    const timeout = new Promise(resolve => {\n      let id = setTimeout(() => {\n        clearTimeout(id);\n        resolve({ response: false, error: \"timeout\" });\n      }, 40000);\n    });\n\n    try {\n      const st = await Promise.race([mpToContent(\"getSections\"), timeout]);\n      // const st = await mpToContent(\"getSections\");\n      console.log(\"getSections.response\", st);\n      if (st.response !== true) this.props.onError();\n      if (st.tabId) this.props.onSetPlayingTabId(st.tabId);\n      console.log(\"parse.succes\", st);\n    } catch (e) {\n      console.log(\"parse.error\");\n      this.props.onError();\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    const isDisabledPlay = this.props.status === PLAYER.STATUS.IS_LOADING;\n    const isDisabledOther = [\n      PLAYER.STATUS.IS_STOPPED,\n      PLAYER.STATUS.IS_LOADING,\n      PLAYER.STATUS.IS_ERROR\n    ].includes(this.props.status);\n\n    let playIcon = <PlayArrowSharp className={classes.largeIcon} />;\n\n    if (\n      [PLAYER.STATUS.IS_READY, PLAYER.STATUS.IS_PAUSED].includes(\n        this.props.status\n      )\n    ) {\n      playIcon = <PlayArrowSharp className={classes.largeIcon} />;\n    } else if (this.props.status === PLAYER.STATUS.IS_PLAYING) {\n      playIcon = <PauseSharp className={classes.largeIcon} />;\n    }\n\n    const playButton = (\n      <IconButton\n        className={`${classes.flatButton} ${classes.bigBtn}`}\n        disabled={isDisabledPlay}\n        onClick={this.playOrParse}\n        color=\"secondary\"\n        ref={this.playRef}\n      >\n        {playIcon}\n      </IconButton>\n    );\n\n    let html = (\n      <>\n        <Grid container align=\"center\">\n          <Grid\n            xs={9}\n            className={`${classes.fbutton} ${classes.activeButton}`}\n            item\n          >\n            {playButton}\n          </Grid>\n          <Grid\n            xs={3}\n            item\n            className={`${classes.fbutton}`}\n            style={{ borderLeft: \"none\" }}\n          >\n            <IconButton\n              disabled={isDisabledOther}\n              onClick={this.props.onStop}\n              className={`${classes.flatButton} ${classes.bigBtn}`}\n              color=\"primary\"\n              ref={this.stopRef}\n            >\n              <StopSharp className={classes.largeIcon} />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <Grid container align=\"center\">\n          <Grid item xs={6} className={classes.button}>\n            <IconButton\n              className={`${classes.flatButton} ${classes.smallBtn}`}\n              disabled={isDisabledOther}\n              onClick={this.props.onPrev}\n              color=\"primary\"\n              size=\"small\"\n              ref={this.prevRef}\n            >\n              <SkipPreviousSharp className={classes.largeIcon} />\n            </IconButton>\n          </Grid>\n          <Grid\n            item\n            xs={6}\n            className={classes.button}\n            style={{ borderLeft: \"none\" }}\n          >\n            <IconButton\n              className={`${classes.flatButton} ${classes.smallBtn}`}\n              disabled={isDisabledOther}\n              onClick={this.props.onNext}\n              ref={this.nextRef}\n              color=\"primary\"\n              size=\"small\"\n            >\n              <SkipNextSharp className={classes.largeIcon} />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </>\n    );\n    return html;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    sections: state.player.sections,\n    status: state.player.status,\n    hotkeyFocus: state.hotkeyFocus,\n    hotkeys: state.hotkeys,\n    disableHotkeys: state.disableHotkeys\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetSections: sections => {\n      dispatch({ type: PARSER.ACTION.SET_SECTIONS, value: sections });\n    },\n    onLoading: () => {\n      dispatch({ type: PLAYER.ACTION.LOADING });\n    },\n    onError: () => {\n      dispatch({ type: PLAYER.ACTION.ERROR });\n    },\n    onPlay: () => {\n      dispatch({ type: PLAYER.EPIC.PLAY });\n    },\n    onStop: () => {\n      dispatch({ type: PLAYER.EPIC.STOP });\n    },\n    onPause: () => {\n      dispatch({ type: PLAYER.EPIC.PAUSE });\n    },\n    onNext: () => {\n      dispatch({ type: PLAYER.EPIC.NEXT });\n    },\n    onPrev: () => {\n      dispatch({ type: PLAYER.EPIC.PREV });\n    },\n    onSetPlayingTabId: id => {\n      dispatch({ type: PLAYER.ACTION.TAB_ID, tabId: id });\n    },\n    onUpdateHotkeyAndResetFocus: (key, hotkeys) => {\n      return dispatch({\n        type: SETTINGS.ACTION.SET_HOTKEYS,\n        hotkeyFocus: \"\",\n        key: key,\n        hotkeys: hotkeys\n      });\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(PlayerComponent));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SETTINGS } from \"../../core/types\";\nimport {\n  FormGroup,\n  TextField,\n  Box,\n  Grid,\n  Typography,\n  Slider,\n  FormControlLabel,\n  withStyles,\n  Switch,\n  InputAdornment\n} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { FlagSharp } from \"@material-ui/icons\";\nimport * as countriesFlags from \"../../core/countries.json\";\n\n// country flags\nimport GB from \"../../assets/flags/gbr.svg\";\nimport US from \"../../assets/flags/usa.svg\";\nimport DE from \"../../assets/flags/deu.svg\";\nimport ES from \"../../assets/flags/esp.svg\";\nimport FR from \"../../assets/flags/fra.svg\";\nimport IN from \"../../assets/flags/ind.svg\";\nimport ID from \"../../assets/flags/ind.svg\";\nimport IT from \"../../assets/flags/ita.svg\";\nimport JP from \"../../assets/flags/jpn.svg\";\nimport KR from \"../../assets/flags/kor.svg\";\nimport NL from \"../../assets/flags/nld.svg\";\nimport PL from \"../../assets/flags/pol.svg\";\nimport BR from \"../../assets/flags/bra.svg\";\nimport RU from \"../../assets/flags/rus.svg\";\nimport CN from \"../../assets/flags/chn.svg\";\nimport HK from \"../../assets/flags/hkg.svg\";\nimport TW from \"../../assets/flags/twn.svg\";\nimport RO from \"../../assets/flags/rou.svg\";\n\nconst flags = {\n  GB: GB,\n  US: US,\n  DE: DE,\n  ES: ES,\n  FR: FR,\n  IN: IN,\n  ID: ID,\n  IT: IT,\n  JP: JP,\n  KR: KR,\n  NL: NL,\n  PL: PL,\n  BR: BR,\n  RU: RU,\n  CN: CN,\n  HK: HK,\n  TW: TW,\n  RO: RO\n};\n\nconst styles = theme => ({\n  text: {\n    fontSize: 12\n  },\n  flagImg: {\n    width: 30\n  },\n  flagOptionImg: {\n    marginRight: 8\n  }\n});\n\nlet t;\nclass SettingsComponent extends Component {\n  settingsChanged = (key, val) => {\n    clearTimeout(t);\n    t = setTimeout(() => {\n      this.props.onSettingChanged(key, val);\n    }, 300);\n  };\n\n  otherSettingsChanged = (key, val) => {\n    this.props.onOtherSettingsChanged(key, val);\n  };\n\n  voiceChanged = (event, value, key) => {\n    console.log(\"voiceChanged\", event, value, key);\n    this.props.onSettingChanged(\"voice\", value.id);\n  };\n\n  render() {\n    console.log(\"countriesFlags\", countriesFlags);\n    console.log(\"flag GB\", GB);\n    const { classes } = this.props;\n    const voice = this.props.voices[this.props.voice];\n    return (\n      <>\n        <Box mt={1} mb={1}>\n          <Autocomplete\n            size=\"small\"\n            id=\"change-voice-combo\"\n            options={this.props.voices}\n            getOptionLabel={option => option.shortTitle}\n            groupBy={option => option.groupName}\n            onChange={this.voiceChanged}\n            defaultValue={voice}\n            style={{ width: \"100%\" }}\n            renderOption={option => {\n              return (\n                <>\n                  {flags[option.countryCode] ? (\n                    <img\n                      src={flags[option.countryCode]}\n                      alt={option.countryCode}\n                      className={`${classes.flagImg} ${classes.flagOptionImg}`}\n                    />\n                  ) : (\n                    <FlagSharp />\n                  )}\n                  {option.shortTitle}\n                </>\n              );\n            }}\n            renderInput={params => {\n              params.InputProps.startAdornment = (\n                <InputAdornment position=\"start\">\n                  {flags[voice.countryCode] ? (\n                    <img\n                      src={flags[voice.countryCode]}\n                      alt={voice.countryCode}\n                      className={classes.flagImg}\n                    />\n                  ) : (\n                    <FlagSharp />\n                  )}\n                </InputAdornment>\n              );\n              return (\n                <TextField\n                  {...params}\n                  label=\"Voice & Language\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              );\n            }}\n          />\n        </Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Typography\n              component=\"span\"\n              className={classes.text}\n              id=\"discrete-slider\"\n              gutterBottom\n            >\n              Volume\n            </Typography>\n            <Slider\n              onChange={(event, value) => {\n                this.settingsChanged(\"volume\", value);\n              }}\n              defaultValue={this.props.volume}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={0.1}\n              scale={x => x * 100}\n              marks\n              min={0.1}\n              max={1}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              component=\"span\"\n              className={classes.text}\n              id=\"discrete-slider\"\n              gutterBottom\n            >\n              Pitch\n            </Typography>\n            <Slider\n              onChange={(event, value) => {\n                this.settingsChanged(\"pitch\", value);\n              }}\n              defaultValue={this.props.pitch}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={0.1}\n              marks\n              min={0.1}\n              max={2}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              component=\"span\"\n              className={classes.text}\n              id=\"discrete-slider\"\n              gutterBottom\n            >\n              Speed\n            </Typography>\n            <Slider\n              onChange={(event, value) => {\n                this.settingsChanged(\"rate\", value);\n              }}\n              defaultValue={this.props.rate}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={0.1}\n              marks\n              min={0.1}\n              max={3.5}\n            />\n          </Grid>\n        </Grid>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.autoscroll}\n                color=\"primary\"\n                onChange={(event, value) => {\n                  this.otherSettingsChanged(\"autoscroll\", value);\n                }}\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                value=\"1\"\n              />\n            }\n            label=\"Auto-scroll\"\n          />\n        </FormGroup>\n      </>\n    );\n  }\n}\n\nconst mapStateToPros = state => {\n  return {\n    showSettings: state.showSettings,\n\n    voice: state.player.settings.voice,\n    voices: state.player.voices,\n    volume: state.player.settings.volume,\n    pitch: state.player.settings.pitch,\n    rate: state.player.settings.rate,\n\n    autoscroll: state.autoscroll\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSettingChanged: (key, val) => {\n      const updatedState = { type: SETTINGS.ACTION.UPDATE };\n      updatedState[key] = val;\n      return dispatch(updatedState);\n    },\n    onOtherSettingsChanged: (key, val) => {\n      const updatedState = { type: SETTINGS.ACTION.OTHER_UPDATE };\n      updatedState[key] = val;\n      return dispatch(updatedState);\n    }\n  };\n};\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(withStyles(styles)(SettingsComponent));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={2}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n","import React, { Component } from \"react\";\nimport {\n  TextField,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Switch\n} from \"@material-ui/core\";\nimport { SETTINGS } from \"../../../core/types\";\nimport { connect } from \"react-redux\";\n\nclass HotkeysComponent extends Component {\n  otherSettingsChanged = (key, val) => {\n    this.props.onOtherSettingsChanged(key, val);\n  };\n\n  onPlayChanged = e => {\n    console.log(\"onPlayChanged\", e.target.value);\n  };\n\n  onKeyFocus = type => {\n    this.props.onHotkeyFocus(type);\n  };\n\n  getKeyCombo = key => {\n    return this.props.hotkeys[key]\n      .map(playKey => {\n        if (playKey.key.trim().length) {\n          return playKey.key.toLocaleUpperCase();\n        } else {\n          return playKey.code.toLocaleUpperCase();\n        }\n      })\n      .join(\"+\");\n  };\n\n  render() {\n    const playDefault = this.getKeyCombo(\"play\");\n    const stopDefault = this.getKeyCombo(\"stop\");\n    const nextDefault = this.getKeyCombo(\"next\");\n    const prevDefault = this.getKeyCombo(\"prev\");\n    console.log(\"playDefault\", playDefault);\n    return (\n      <>\n        <form noValidate autoComplete=\"off\">\n          <Typography>Customize your hotkeys</Typography>\n          <div>\n            <TextField\n              inputProps={{ readOnly: true }}\n              id=\"filled-basic\"\n              label=\"play/pause\"\n              variant=\"filled\"\n              onFocus={(e: any) => {\n                this.onKeyFocus(\"play\");\n              }}\n              onBlur={() => {\n                this.onKeyFocus(\"\");\n              }}\n              value={playDefault}\n            />\n          </div>\n          <div>\n            <TextField\n              id=\"filled-basic\"\n              inputProps={{ readOnly: true }}\n              label=\"stop\"\n              variant=\"filled\"\n              onBlur={() => {\n                this.onKeyFocus(\"\");\n              }}\n              onFocus={() => {\n                this.onKeyFocus(\"stop\");\n              }}\n              value={stopDefault}\n            />\n          </div>\n          <div>\n            <TextField\n              id=\"filled-basic\"\n              inputProps={{ readOnly: true }}\n              onBlur={() => {\n                this.onKeyFocus(\"\");\n              }}\n              onFocus={() => {\n                this.onKeyFocus(\"next\");\n              }}\n              label=\"next\"\n              variant=\"filled\"\n              value={nextDefault}\n            />\n          </div>\n          <div>\n            <TextField\n              inputProps={{ readOnly: true }}\n              id=\"filled-basic\"\n              label=\"prev\"\n              onBlur={() => {\n                this.onKeyFocus(\"\");\n              }}\n              onFocus={() => {\n                this.onKeyFocus(\"prev\");\n              }}\n              variant=\"filled\"\n              value={prevDefault}\n            />\n          </div>\n        </form>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.disableHotkeys}\n                color=\"primary\"\n                onChange={(event, value) => {\n                  this.otherSettingsChanged(\"disableHotkeys\", value);\n                }}\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                value=\"1\"\n              />\n            }\n            label=\"Disable hotkeys\"\n          />\n        </FormGroup>\n      </>\n    );\n  }\n}\n\nconst mapStateToPros = state => {\n  return {\n    disableHotkeys: state.disableHotkeys,\n    hotkeys: state.hotkeys\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOtherSettingsChanged: (key, val) => {\n      const updatedState = { type: SETTINGS.ACTION.OTHER_UPDATE };\n      updatedState[key] = val;\n      return dispatch(updatedState);\n    },\n    onHotkeyFocus: hotkey => {\n      return dispatch({\n        type: SETTINGS.ACTION.HOTKEY_FOCUS,\n        hotkeyFocus: hotkey\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToPros, mapDispatchToProps)(HotkeysComponent);\n","import React, { Component } from \"react\";\nimport SettingsComponent from \"../Settings/SettingsComponent\";\nimport { AppBar, Tab, Tabs } from \"@material-ui/core\";\nimport TabPanel from \"../TabPanel/TabPanel\";\nimport { connect } from \"react-redux\";\nimport HotkeysComponent from \"../Settings/Hotkeys/HotkeysComponent\";\n\nclass FooterComponent extends Component {\n  state = {\n    activeTab: 0\n  };\n\n  a11yProps = index => {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`\n    };\n  };\n\n  render() {\n    return this.props.showSettings ? (\n      <>\n        <AppBar position=\"static\" style={{ backgroundColor: \"#031a54\" }}>\n          <Tabs\n            value={this.state.activeTab}\n            onChange={(e, val) => {\n              this.setState({ activeTab: val });\n            }}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab label=\"Voice\" {...this.a11yProps(0)} />\n            <Tab label=\"Hotkeys\" {...this.a11yProps(1)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={this.state.activeTab} index={0}>\n          <SettingsComponent />\n        </TabPanel>\n        <TabPanel value={this.state.activeTab} index={1}>\n          <HotkeysComponent />\n        </TabPanel>\n      </>\n    ) : null;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    showSettings: state.showSettings\n  };\n};\nexport default connect(mapStateToProps)(FooterComponent);\n","import React from \"react\";\nimport {\n  Box,\n  CssBaseline,\n  createMuiTheme,\n  ThemeProvider\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport HeaderComponent from \"./components/Header/HeaderComponent\";\nimport PlayerComponent from \"./components/Player/PlayerComponent\";\nimport FooterComponent from \"./components/Footer/FooterComponent\";\nimport { tracker } from \"./util/util\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#082E8B\",\n      light: \"#4e57bc\",\n      dark: \"#000a5d\"\n    },\n    secondary: {\n      main: \"#f0f0f0\",\n      light: \"#ffffff\",\n      dark: \"#cccccc\"\n    },\n    tertiary: {\n      main: \"#999\"\n    }\n  }\n});\ntracker(\"event\", \"open\");\nfunction App() {\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Box>\n          <HeaderComponent />\n          <PlayerComponent />\n          <FooterComponent />\n        </Box>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Store } from \"webext-redux\";\n// import reducer from \"./reducer\";\n\nconst store = new Store();\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nstore.ready().then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ind.f3a60ba3.svg\";","module.exports = __webpack_public_path__ + \"static/media/gbr.2e9c71c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/usa.4c3d08c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/deu.85f98c37.svg\";","module.exports = __webpack_public_path__ + \"static/media/esp.24eff4ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/fra.85556bea.svg\";","module.exports = __webpack_public_path__ + \"static/media/ita.48651b91.svg\";","module.exports = __webpack_public_path__ + \"static/media/jpn.a1e1ea51.svg\";","module.exports = __webpack_public_path__ + \"static/media/kor.6031b375.svg\";","module.exports = __webpack_public_path__ + \"static/media/nld.e53fc83f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pol.1f9d98ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/bra.238fc318.svg\";","module.exports = __webpack_public_path__ + \"static/media/rus.7a8b3a7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/chn.9caece66.svg\";","module.exports = __webpack_public_path__ + \"static/media/hkg.98d52d17.svg\";","module.exports = __webpack_public_path__ + \"static/media/twn.3c944f89.svg\";","module.exports = __webpack_public_path__ + \"static/media/rou.af9e2aae.svg\";"],"sourceRoot":""}